{"ast":null,"code":"var _jsxFileName = \"/home/daniel/code/monsters-rolodex-fn/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [searchField, setSearchField] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setMonsters(users)).catch(reject => console.log('I couldnt retrieve the list of users'));\n  }, []);\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    setFilteredMonsters(newFilteredMonsters);\n  }, [searchField, monsters]);\n\n  const handleSearch = e => {\n    setSearchField(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monsters Rolodex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      placeholder: \"search monsters\",\n      handleChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      monsters: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YjM+qWSyF3I2IMx5PoA1UagYOq0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/daniel/code/monsters-rolodex-fn/src/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","App","searchField","setSearchField","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetch","then","response","json","users","catch","reject","console","log","newFilteredMonsters","filter","monster","name","toLowerCase","includes","handleSearch","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAAQC,QAAR,QAAuB,4CAAvB;AACA,SAAQC,SAAR,QAAwB,8CAAxB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACO,QAAD,CAAxD;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAIP,WAAW,CAACO,KAAD,CAF1B,EAGCC,KAHD,CAGOC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAHjB;AAID,GALQ,EAKN,EALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMmB,mBAAmB,GAAGb,QAAQ,CAACc,MAAT,CAAgBC,OAAO,IACjDA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCpB,WAAW,CAACmB,WAAZ,EAApC,CAD0B,CAA5B;AAGAd,IAAAA,mBAAmB,CAACU,mBAAD,CAAnB;AACD,GALQ,EAKP,CAACf,WAAD,EAAcE,QAAd,CALO,CAAT;;AAOA,QAAMmB,YAAY,GAAGC,CAAC,IAAI;AACxBrB,IAAAA,cAAc,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,WAAW,EAAG,iBADhB;AAEE,MAAA,YAAY,EAAIH;AAFlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAIjB;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;GAAML,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nconst App = () => {\n\n  const [searchField, setSearchField] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => setMonsters(users))\n    .catch(reject => console.log('I couldnt retrieve the list of users'));\n  }, []);\n\n  useEffect(()=>{\n    const newFilteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    setFilteredMonsters(newFilteredMonsters);\n  },[searchField, monsters]);\n\n  const handleSearch = e => {\n    setSearchField(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder = 'search monsters'\n        handleChange = {handleSearch}  \n      />\n      <CardList monsters = {filteredMonsters}>\n      </CardList>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}